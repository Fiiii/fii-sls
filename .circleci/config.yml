default_environment: &default_environment
    docker:
      - image: amaysim/serverless:1.30.3
    working_directory: ~/fii-sls

version: 2
jobs:
  test:
    <<: *default_environment
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run: yarn test

  deploy_dev:
    <<: *default_environment
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy dev
          command: |
            export STAGE=dev
            export REGION=$AWS_REGION
            yarn deploy

  deploy_integration:
    <<: *default_environment
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy integration
          command: |
            export STAGE=integration
            export REGION=$AWS_REGION
            yarn deploy

  deploy_production:
    <<: *default_environment
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy production
          command: |
            export STAGE=production
            export REGION=$AWS_REGION
            yarn deploy

workflows:
  version: 2
  deployment:
    jobs:
      - test
      - deploy_dev:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy_integration:
          requires:
            - test
          filters:
            branches:
              only:
                - integration
      - deploy_production:
          requires:
            - test
          filters:
            branches:
              only:
                - production
